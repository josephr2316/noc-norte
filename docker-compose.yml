networks:
  monitor-net:
    name: monitor-net
    driver: bridge

volumes:
  prometheus-data:
  loki-index:
  loki-chunks:
  loki-cache:
  oxidized-data:

services:
  librenms:
    image: librenms/librenms:latest
    container_name: librenms
    hostname: librenms-norte
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - LIBRENMS_SNMP_COMMUNITY=${LIBRENMS_SNMP_COMMUNITY}
    ports:
      - "${LIBRENMS_PORT:-8000}:8000"
    volumes:
      - ./librenms:/data
      - ./librenms/syslog:/data/syslog
    depends_on:
      - mariadb
      - memcached
    networks:
      - monitor-net
    restart: unless-stopped

  mariadb:
    image: mariadb:10.5
    container_name: librenms-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./librenms/db:/var/lib/mysql
    networks:
      - monitor-net
    restart: unless-stopped

  memcached:
    image: memcached:alpine
    container_name: librenms-memcached
    networks:
      - monitor-net
    restart: unless-stopped

  syslog-ng:
    image: balabit/syslog-ng:latest
    container_name: librenms-syslog-ng
    ports:
      - "514:514/udp"
      - "514:514/tcp"
    volumes:
      - ./syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro
      - ./librenms/syslog:/data/syslog
    networks:
      - monitor-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - TZ=${TZ}
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitor-net
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./influxdb:/var/lib/influxdb
    networks:
      - monitor-net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/targets:/etc/prometheus/targets:ro
      - prometheus-data:/prometheus
    networks:
      - monitor-net
    depends_on:
      - node_exporter
      - blackbox_exporter
    restart: unless-stopped

  snmp_exporter:
    image: prom/snmp-exporter:latest
    container_name: snmp_exporter
    ports:
      - "9116:9116"
    volumes:
      - ./prometheus/snmp/snmp.yml:/etc/snmp_exporter/snmp.yml:ro
    networks:
      - monitor-net
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command: ["--path.rootfs=/host"]
    pid: host
    volumes:
      - /:/host:ro,rslave
    ports:
      - "9100:9100"
    networks:
      - monitor-net
    restart: unless-stopped

  blackbox_exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox_exporter
    ports:
      - "9115:9115"
    networks:
      - monitor-net
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.6
    container_name: loki
    command: -config.file=/etc/loki/config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - loki-index:/loki/index
      - loki-chunks:/loki/chunks
      - loki-cache:/loki/cache
    networks:
      - monitor-net
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.6
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /etc/machine-id:/etc/machine-id:ro
    depends_on:
      - loki
    networks:
      - monitor-net
    restart: unless-stopped

  oxidized:
    image: oxidized/oxidized:latest
    container_name: oxidized
    environment:
      - CONFIG_RELOAD_INTERVAL=3600
      - TZ=${TZ}
    volumes:
      - oxidized-data:/home/oxidized/.config/oxidized
    ports:
      - "8888:8888"
    networks:
      - monitor-net
    restart: unless-stopped
